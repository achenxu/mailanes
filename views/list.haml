%h2
  Lists
  = succeed ':' do
    = "##{list.id}"
  = list.title

- if list.stop?
  %p.red
    This is the
    %strong STOP
    list! Its recipients will never receive any letters from you.

%p
  %a.item{onclick: '$("#save").show();'} Edit YAML
  %a.item{onclick: '$("#add").show();$("#email").focus();'} Add Recipient
  %a.item{onclick: '$("#find").show();$("#query").focus();'} Find Recipient
  %a.item{onclick: '$("#upload").show();'} Upload CSV
  %a.item{href: "/download-recipients?id=#{list.id}"} Download CSV

%form.hidden{method: 'POST', action: '/save-list', id: 'save'}
  %fieldset
    %input{type: 'hidden', name: 'id', value: list.id}
    %label
      %a{href: 'https://github.com/yegor256/mailanes#list'} YAML
      config:
    %textarea{name: 'yaml', style: 'width:100%;height:12em;', required: 'true'}= list.yaml.to_yaml
    %input{type: 'submit', value: 'Save'}

%form.hidden{method: 'POST', action: '/add-recipient', id: 'add'}
  %input{type: 'hidden', name: 'id', value: list.id}
  %input{type: 'text', name: 'email', id: 'email', placeholder: 'Email', size: 20, required: 'true', autocomplete: 'off'}
  %input{type: 'text', name: 'first', placeholder: 'First name', size: 14, autocomplete: 'off'}
  %input{type: 'text', name: 'last', placeholder: 'Last name', size: 16, autocomplete: 'off'}
  %input{type: 'submit', value: 'Add Recipient'}

%form.hidden{method: 'GET', action: '/list', id: 'find'}
  %input{type: 'hidden', name: 'id', value: list.id}
  %input{type: 'text', name: 'query', id: 'query', placeholder: 'Email or name to find...', size: 32, required: 'true', autocomplete: 'off', value: (params[:query] || nil)}
  %input{type: 'submit', value: 'Find'}
  %label Start with '=' if you are looking for an exact match.

%form.hidden{method: 'POST', action: '/upload-recipients', id: 'upload', enctype: 'multipart/form-data'}
  %input{type: 'hidden', name: 'id', value: list.id}
  %input{name: 'file', type: 'file', accept: 'text/plain'}
  %input{type: 'submit', value: 'Upload'}
  %br
  %label.small.gray
    Make sure it's a headerless CSV file,
    with an email in the first column,
    first name in the second,
    and the last name in the third one.
    The forth column may contain a semi-colon separated list of deliveries, which
    we will create right after adding the recipient,
    for example "3/88" (campaign ID, letter ID).

%p
  Participates in:
  - list.campaigns.each do |c|
    = succeed ':' do
      %a{href: "/campaign?id=#{c.id}"}= "C##{c.id}"
      = '/'
      %a{href: "/lane?id=#{c.lane.id}"}= "L##{c.lane.id}"
    = "\"#{c.lane.title}\""

%p
  Delivered
  = list.deliveries_count
  emails.

%p
  There are
  = list.recipients.count
  recipient(s):

%p
  - list.recipients.all(query: params[:query] || '').each do |r|
    %span{class: ('cross' unless r.active?)}
      %a{href: "/recipient?list=#{list.id}&id=#{r.id}"}= r.email
